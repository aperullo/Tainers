name: test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  workflow_call:

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref_name || github.run_id }}
  cancel-in-progress: true

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        curl -sSL \
          "https://install.python-poetry.org" | python -
        # Adding `poetry` to `$PATH`:
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry run pip install -U pip
        poetry install
    
    - name: Run checks
      run: |
        poetry run pytest -m "not functional"
        poetry run poetry check
    
    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        format: markdown
        indicators: true
        output: file
        thresholds: '70 90'
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        env_vars: OS,PYTHON
        files: coverage.xml

  functional_tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python '3.10'
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install poetry
      run: |
        curl -sSL \
          "https://install.python-poetry.org" | python -
        # Adding `poetry` to `$PATH`:
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry run pip install -U pip
        poetry install
  
    - name: Run tests
      run: |
        poetry run pytest -m "functional"
